webpackJsonp([15],{852:function(n,t,o){var s=o(18),e=o(50),a=o(84).PageRenderer;a.__esModule&&(a=a.default);var u=e({displayName:"WrappedPageRenderer",getInitialState:function(){return{content:o(880)}},componentWillMount:function(){},render:function(){return s.createElement(a,Object.assign({},this.props,{content:this.state.content}))}});u.__catalog_loader__=!0,n.exports=u},880:function(n,t){n.exports='Colors:\n```react\nconst colors = [\n  "is-white",\n  "is-light",\n  "is-dark",\n  "is-black",\n  "is-text",\n  "is-primary",\n  "is-link",\n  "is-info",\n  "is-success",\n  "is-warning",\n  "is-danger",\n];\n<Buttons>\n  {colors.map(color => (\n    <Button key={color} className={`${color}`} >{color}</Button>\n  ))}\n</Buttons>\n```\nSizes:\n``` react\n  <Buttons>\n    <Button className="is-small" >Small</Button>\n    <Button >Normal</Button>\n    <Button className="is-medium" >Medium</Button>\n    <Button className="is-large" >Large</Button>\n  </Buttons>\n```\nStyles:\n``` react\nconst colors = [\n  "is-white",\n  "is-light",\n  "is-dark",\n  "is-black",\n  "is-text",\n  "is-primary",\n  "is-link",\n  "is-info",\n  "is-success",\n  "is-warning",\n  "is-danger",\n];\n<div>\n  <h1>Rounded</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-rounded`} >Rounded</Button>\n    ))}\n  </Buttons>\n  <h1>Outlined</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-outlined`} >Outlined</Button>\n    ))}\n  </Buttons>\n  <h1>Inverted</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-inverted`} >Inverted</Button>\n    ))}\n  </Buttons>\n  <h1>Outlined & Inverted</h1>\n  <Buttons className="has-background-primary">\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-outlined is-inverted`}>Inverted</Button>\n    ))}\n  </Buttons>\n</div>\n```\nStates:\n``` react\nconst colors = [\n  "is-white",\n  "is-light",\n  "is-dark",\n  "is-black",\n  "is-text",\n  "is-primary",\n  "is-link",\n  "is-info",\n  "is-success",\n  "is-warning",\n  "is-danger",\n];\n<div>\n  <h1>Normal</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color}`} >Normal</Button>\n    ))}\n  </Buttons>\n  <h1>Hover</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-hovered`} >Hover</Button>\n    ))}\n  </Buttons>\n  <h1>Focus</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-focused`} >Focus</Button>\n    ))}\n  </Buttons>\n  <h1>Active</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-active`} >Active</Button>\n    ))}\n  </Buttons>\n  <h1>Loading</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color} is-loading`} >Loading</Button>\n    ))}\n  </Buttons>\n  <h1>Static</h1>\n  <Buttons>\n    <Button className="is-static" >Static</Button>\n  </Buttons>\n  <h1>Disabled</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color}`} disabled >Disabled</Button>\n    ))}\n  </Buttons>\n</div>\n```\n### Button Lists with `Buttons`\n\n``` react\nconst colors = [\n  "is-white",\n  "is-light",\n  "is-dark",\n  "is-black",\n  "is-text",\n  "is-primary",\n  "is-link",\n  "is-info",\n  "is-success",\n  "is-warning",\n  "is-danger",\n];\n<div>\n  <h1>Normal</h1>\n  <Buttons>\n    <Button className="is-success" >Save Changes</Button>\n    <Button className="is-info" >Save and Continue</Button>\n    <Button className="is-danger" >Cancel</Button>\n  </Buttons>\n  <h1>Long Lists Wrap</h1>\n  <Buttons>\n    {colors.map(color => (\n      <Button key={color} className={`${color}`} >Click</Button>\n    ))}\n    {colors.map(color => (\n      <Button key={color} className={`${color}`} >Click</Button>\n    ))}\n    {colors.map(color => (\n      <Button key={color} className={`${color}`} >Click</Button>\n    ))}\n  </Buttons>\n  <h1>Attached Together</h1>\n  <Buttons className="has-addons">\n    <Button >Yes</Button>\n    <Button >Maybe</Button>\n    <Button >No</Button>\n  </Buttons>\n  <h1>Alignment Modifiers</h1>\n  <Buttons className="has-addons is-centered">\n    <Button >Yes</Button>\n    <Button >Maybe</Button>\n    <Button >No</Button>\n  </Buttons>\n  <Buttons className="has-addons is-right">\n    <Button >Yes</Button>\n    <Button >Maybe</Button>\n    <Button >No</Button>\n  </Buttons>\n  <h1>Is Selected Modifier</h1>\n  <Buttons className="has-addons">\n    <Button className="is-selected is-success">Yes</Button>\n    <Button >Maybe</Button>\n    <Button >No</Button>\n  </Buttons>\n  <Buttons className="has-addons">\n    <Button >Yes</Button>\n    <Button className="is-selected is-info">Maybe</Button>\n    <Button >No</Button>\n  </Buttons>\n  <Buttons className="has-addons">\n    <Button >Yes</Button>\n    <Button >Maybe</Button>\n    <Button className="is-selected is-danger">No</Button>\n  </Buttons>\n</div>\n```\n'}});
//# sourceMappingURL=15.caae1ced.chunk.js.map